
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '764A22E8DB17F2246762DC79BF57F7F4'
    
_lr_action_items = {'DIVIDE':([23,24,25,26,29,30,31,32,41,45,53,55,79,80,81,82,83,84,85,86,87,88,89,90,94,98,99,],[-35,-51,-33,-32,-31,-50,-34,58,58,58,-36,58,-37,58,58,-41,-42,58,58,58,58,58,-40,58,58,58,-49,]),'as':([100,],[107,]),'connect':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[1,1,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,1,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'in':([33,36,44,93,95,],[67,68,72,105,106,]),'MULTIPLY':([23,24,25,26,29,30,31,32,41,45,53,55,79,80,81,82,83,84,85,86,87,88,89,90,94,98,99,],[-35,-51,-33,-32,-31,-50,-34,65,65,65,-36,65,-37,65,65,-41,-42,65,65,65,65,65,-40,65,65,65,-49,]),'MINUS':([2,6,10,22,23,24,25,26,28,29,30,31,32,41,43,45,48,53,55,56,57,58,59,60,61,62,63,64,65,66,70,73,77,79,80,81,82,83,84,85,86,87,88,89,90,94,98,99,101,],[22,22,22,22,-35,-51,-33,-32,22,-31,-50,-34,66,66,22,66,22,-36,66,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-37,66,66,-41,-42,66,66,66,66,-38,-40,-39,66,66,-49,22,]),'SELECT':([107,],[116,]),'if':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[2,2,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,2,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'INSERT':([107,],[113,]),'LE':([23,24,25,26,29,30,31,32,53,79,82,83,88,89,90,99,],[-35,-51,-33,-32,-31,-50,-34,56,-36,-37,-41,-42,-38,-40,-39,-49,]),'end':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[13,13,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,13,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'SEMI':([6,],[37,]),'DBPROVIDER':([52,],[78,]),'DBID':([2,6,10,22,28,43,48,56,57,58,59,60,61,62,63,64,65,66,70,73,77,101,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'NE':([23,24,25,26,29,30,31,32,53,79,82,83,88,89,90,99,],[-35,-51,-33,-32,-31,-50,-34,61,-36,-37,-41,-42,-38,-40,-39,-49,]),'PLUS':([23,24,25,26,29,30,31,32,41,45,53,55,79,80,81,82,83,84,85,86,87,88,89,90,94,98,99,],[-35,-51,-33,-32,-31,-50,-34,64,64,64,-36,64,-37,64,64,-41,-42,64,64,64,64,-38,-40,-39,64,64,-49,]),'outcsv':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[3,3,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,3,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'COMMA':([6,23,24,25,26,29,30,31,36,39,41,53,71,74,79,82,83,88,89,90,94,99,103,108,],[40,-35,-51,-33,-32,-31,-50,-34,69,70,-53,-36,70,70,-37,-41,-42,-38,-40,-39,-52,-49,70,70,]),'foreach':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[5,5,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,5,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'print':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[6,6,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,6,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'import':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[7,7,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,7,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'save':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[8,8,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,8,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'$end':([4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[0,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'then':([23,24,25,26,27,29,30,31,53,79,80,81,82,83,84,85,86,87,88,89,90,99,],[-35,-51,-33,-32,54,-31,-50,-34,-36,-37,-44,-46,-41,-42,-47,-48,-43,-45,-38,-40,-39,-49,]),'GT':([23,24,25,26,29,30,31,32,53,79,82,83,88,89,90,99,],[-35,-51,-33,-32,-31,-50,-34,63,-36,-37,-41,-42,-38,-40,-39,-49,]),'return':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[10,10,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,10,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'STRING':([2,6,7,10,22,28,43,48,56,57,58,59,60,61,62,63,64,65,66,67,70,73,77,101,104,],[23,23,42,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,91,23,23,23,23,110,]),'EQUALS':([21,23,24,25,26,29,30,31,32,47,50,53,79,82,83,88,89,90,99,],[52,-35,-51,-33,-32,-31,-50,-34,60,73,76,-36,-37,-41,-42,-38,-40,-39,-49,]),'else':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[11,11,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,11,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'GE':([23,24,25,26,29,30,31,32,53,79,82,83,88,89,90,99,],[-35,-51,-33,-32,-31,-50,-34,57,-36,-37,-41,-42,-38,-40,-39,-49,]),'let':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[12,12,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,12,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'LPAREN':([2,6,8,10,14,22,28,30,43,48,51,56,57,58,59,60,61,62,63,64,65,66,70,73,76,77,78,101,],[28,28,43,28,48,28,28,48,28,28,77,28,28,28,28,28,28,28,28,28,28,28,28,28,101,28,104,28,]),'INTEGER':([2,6,10,22,28,43,48,56,57,58,59,60,61,62,63,64,65,66,70,73,77,101,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'RPAREN':([23,24,25,26,29,30,31,41,53,55,71,74,77,79,82,83,88,89,90,94,99,103,108,110,],[-35,-51,-33,-32,-31,-50,-34,-53,-36,79,95,99,102,-37,-41,-42,-38,-40,-39,-52,-49,109,117,118,]),'with':([49,],[75,]),'ID':([0,1,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,22,23,24,25,26,28,29,30,31,34,35,37,38,39,40,41,42,43,45,46,48,53,54,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,75,77,79,82,83,88,89,90,91,92,94,96,97,98,99,101,102,105,106,109,111,112,113,114,115,116,117,118,],[14,21,30,33,14,36,30,44,-4,30,-20,47,-15,49,50,-18,-2,-5,51,30,-35,-51,-33,-32,30,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,30,-17,-26,30,-36,-19,30,30,30,30,30,30,30,30,30,30,30,92,93,30,96,30,100,30,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,30,-21,111,112,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'UPDATE':([107,],[114,]),'search':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[15,15,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,15,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'POWER':([23,24,25,26,29,30,31,32,41,45,53,55,79,80,81,82,83,84,85,86,87,88,89,90,94,98,99,],[-35,-51,-33,-32,-31,-50,-34,59,59,59,-36,59,-37,59,59,59,-42,59,59,59,59,59,59,59,59,59,-49,]),'FLOAT':([2,6,10,22,28,43,48,56,57,58,59,60,61,62,63,64,65,66,70,73,77,101,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'list':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[16,16,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,16,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'LT':([23,24,25,26,29,30,31,32,53,79,82,83,88,89,90,99,],[-35,-51,-33,-32,-31,-50,-34,62,-36,-37,-41,-42,-38,-40,-39,-49,]),'continue':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[17,17,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,17,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),'error':([0,12,],[19,46,]),'def':([0,4,6,9,10,11,13,17,18,19,23,24,25,26,29,30,31,34,35,37,38,39,40,41,42,45,46,53,54,73,79,82,83,88,89,90,91,92,94,96,97,98,99,102,109,111,112,113,114,115,116,117,118,],[20,20,-56,-4,-16,-20,-15,-18,-2,-5,-35,-51,-33,-32,-31,-50,-34,-3,-1,-55,-10,-11,-54,-53,-6,-17,-26,-36,-19,20,-37,-41,-42,-38,-40,-39,-7,-13,-52,-8,-25,-24,-49,-21,-22,-14,-9,-29,-30,-12,-28,-27,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,2,4,6,10,22,28,43,48,56,57,58,59,60,61,62,63,64,65,66,70,73,77,101,],[9,26,34,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'relexpression':([2,],[27,]),'optend':([6,],[38,]),'parlist':([6,43,48,77,101,],[39,71,74,103,108,]),'program':([0,],[4,]),'command':([0,4,73,],[18,35,97,]),'sql':([107,],[115,]),'variable':([2,6,10,22,28,43,48,56,57,58,59,60,61,62,63,64,65,66,70,73,77,101,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'expression':([2,6,10,22,28,43,48,56,57,58,59,60,61,62,63,64,65,66,70,73,77,101,],[32,41,45,53,55,41,41,80,81,82,83,84,85,86,87,88,89,90,94,98,41,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program command','program',2,'p_program','mqlparse.py',17),
  ('program -> command','program',1,'p_program','mqlparse.py',18),
  ('program -> program function','program',2,'p_program_function','mqlparse.py',31),
  ('program -> function','program',1,'p_program_function','mqlparse.py',32),
  ('program -> error','program',1,'p_program_error','mqlparse.py',46),
  ('command -> import STRING','command',2,'p_command_import','mqlparse.py',53),
  ('command -> outcsv ID in STRING','command',4,'p_command_outcsv','mqlparse.py',58),
  ('command -> save ID in ID','command',4,'p_command_save','mqlparse.py',63),
  ('command -> save LPAREN parlist RPAREN in ID','command',6,'p_command_save_list','mqlparse.py',68),
  ('command -> print optend','command',2,'p_command_print_empty','mqlparse.py',73),
  ('command -> print parlist','command',2,'p_command_print_list','mqlparse.py',78),
  ('command -> search ID with ID as sql','command',6,'p_command_search','mqlparse.py',83),
  ('command -> foreach ID in ID','command',4,'p_command_foreach','mqlparse.py',88),
  ('command -> foreach ID COMMA ID in ID','command',6,'p_command_foreach_enum','mqlparse.py',93),
  ('command -> end','command',1,'p_command_end','mqlparse.py',97),
  ('command -> return','command',1,'p_command_return','mqlparse.py',102),
  ('command -> return expression','command',2,'p_command_return_expr','mqlparse.py',107),
  ('command -> continue','command',1,'p_command_continue','mqlparse.py',112),
  ('command -> if relexpression then','command',3,'p_command_if','mqlparse.py',117),
  ('command -> else','command',1,'p_command_else','mqlparse.py',122),
  ('command -> def ID LPAREN RPAREN','command',4,'p_command_def_empty','mqlparse.py',127),
  ('command -> def ID LPAREN parlist RPAREN','command',5,'p_command_def','mqlparse.py',132),
  ('command -> connect ID EQUALS DBPROVIDER LPAREN STRING RPAREN','command',7,'p_command_connect','mqlparse.py',136),
  ('command -> let ID EQUALS expression','command',4,'p_command_let','mqlparse.py',141),
  ('command -> let ID EQUALS command','command',4,'p_command_let_command','mqlparse.py',146),
  ('command -> let error','command',2,'p_command_let_command_error','mqlparse.py',151),
  ('command -> list ID EQUALS LPAREN parlist RPAREN','command',6,'p_command_list','mqlparse.py',156),
  ('sql -> SELECT','sql',1,'p_sql','mqlparse.py',165),
  ('sql -> INSERT','sql',1,'p_sql','mqlparse.py',166),
  ('sql -> UPDATE','sql',1,'p_sql','mqlparse.py',167),
  ('expression -> variable','expression',1,'p_expression_variable','mqlparse.py',178),
  ('expression -> function','expression',1,'p_expression_function','mqlparse.py',183),
  ('expression -> INTEGER','expression',1,'p_expression_number','mqlparse.py',188),
  ('expression -> FLOAT','expression',1,'p_expression_number','mqlparse.py',189),
  ('expression -> STRING','expression',1,'p_expression_string','mqlparse.py',194),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mqlparse.py',199),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mqlparse.py',204),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','mqlparse.py',209),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','mqlparse.py',210),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','mqlparse.py',211),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','mqlparse.py',212),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','mqlparse.py',213),
  ('relexpression -> expression LT expression','relexpression',3,'p_relexpression','mqlparse.py',224),
  ('relexpression -> expression LE expression','relexpression',3,'p_relexpression','mqlparse.py',225),
  ('relexpression -> expression GT expression','relexpression',3,'p_relexpression','mqlparse.py',226),
  ('relexpression -> expression GE expression','relexpression',3,'p_relexpression','mqlparse.py',227),
  ('relexpression -> expression EQUALS expression','relexpression',3,'p_relexpression','mqlparse.py',228),
  ('relexpression -> expression NE expression','relexpression',3,'p_relexpression','mqlparse.py',229),
  ('function -> ID LPAREN parlist RPAREN','function',4,'p_function','mqlparse.py',240),
  ('variable -> ID','variable',1,'p_variable','mqlparse.py',250),
  ('variable -> DBID','variable',1,'p_variable','mqlparse.py',251),
  ('parlist -> parlist COMMA expression','parlist',3,'p_parlist','mqlparse.py',262),
  ('parlist -> expression','parlist',1,'p_parlist','mqlparse.py',263),
  ('optend -> COMMA','optend',1,'p_optend','mqlparse.py',272),
  ('optend -> SEMI','optend',1,'p_optend','mqlparse.py',273),
  ('optend -> <empty>','optend',0,'p_optend','mqlparse.py',274),
]
