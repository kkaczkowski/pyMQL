
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5E4A28517C8811E1C3943BC4AE8ACE90'
    
_lr_action_items = {'DIVIDE':([22,23,24,25,26,29,30,31,32,40,48,50,66,74,75,76,77,78,79,80,81,82,83,84,85,93,94,102,],[-34,-30,-50,-32,-31,-29,-49,-33,53,53,-35,53,53,-36,53,53,-40,-41,53,53,53,53,53,-39,53,53,-48,53,]),'as':([95,],[103,]),'connect':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[1,1,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,1,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'in':([33,36,39,88,89,],[62,63,67,100,101,]),'MULTIPLY':([22,23,24,25,26,29,30,31,32,40,48,50,66,74,75,76,77,78,79,80,81,82,83,84,85,93,94,102,],[-34,-30,-50,-32,-31,-29,-49,-33,60,60,-35,60,60,-36,60,60,-40,-41,60,60,60,60,60,-39,60,60,-48,60,]),'MINUS':([2,9,21,22,23,24,25,26,28,29,30,31,32,38,40,43,48,50,51,52,53,54,55,56,57,58,59,60,61,66,68,72,74,75,76,77,78,79,80,81,82,83,84,85,90,93,94,96,102,],[21,21,21,-34,-30,-50,-32,-31,21,-29,-49,-33,61,21,61,21,-35,61,21,21,21,21,21,21,21,21,21,21,21,61,21,21,-36,61,61,-40,-41,61,61,61,61,-37,-39,-38,21,61,-48,21,61,]),'SELECT':([103,],[112,]),'if':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[2,2,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,2,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'INSERT':([103,],[109,]),'LE':([22,23,24,25,26,29,30,31,32,48,74,77,78,83,84,85,94,],[-34,-30,-50,-32,-31,-29,-49,-33,51,-35,-36,-40,-41,-37,-39,-38,-48,]),'end':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[12,12,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,12,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'POWER':([22,23,24,25,26,29,30,31,32,40,48,50,66,74,75,76,77,78,79,80,81,82,83,84,85,93,94,102,],[-34,-30,-50,-32,-31,-29,-49,-33,54,54,-35,54,54,-36,54,54,54,-41,54,54,54,54,54,54,54,54,-48,54,]),'DBPROVIDER':([47,],[73,]),'DBID':([2,9,21,28,38,43,51,52,53,54,55,56,57,58,59,60,61,68,72,90,96,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'NE':([22,23,24,25,26,29,30,31,32,48,74,77,78,83,84,85,94,],[-34,-30,-50,-32,-31,-29,-49,-33,56,-35,-36,-40,-41,-37,-39,-38,-48,]),'outcsv':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[3,3,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,3,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'PLUS':([22,23,24,25,26,29,30,31,32,40,48,50,66,74,75,76,77,78,79,80,81,82,83,84,85,93,94,102,],[-34,-30,-50,-32,-31,-29,-49,-33,59,59,-35,59,59,-36,59,59,-40,-41,59,59,59,59,-37,-39,-38,59,-48,59,]),'foreach':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[5,5,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,5,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'import':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[6,6,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,6,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'save':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[7,7,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,7,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'$end':([4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[0,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'then':([22,23,24,25,26,27,29,30,31,48,74,75,76,77,78,79,80,81,82,83,84,85,94,],[-34,-30,-50,-32,-31,49,-29,-49,-33,-35,-36,-43,-45,-40,-41,-46,-47,-42,-44,-37,-39,-38,-48,]),'GT':([22,23,24,25,26,29,30,31,32,48,74,77,78,83,84,85,94,],[-34,-30,-50,-32,-31,-29,-49,-33,58,-35,-36,-40,-41,-37,-39,-38,-48,]),'return':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[9,9,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,9,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'STRING':([2,6,9,21,28,38,43,51,52,53,54,55,56,57,58,59,60,61,62,68,72,90,96,99,],[22,37,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,86,22,22,22,22,106,]),'EQUALS':([20,22,23,24,25,26,29,30,31,32,42,45,48,74,77,78,83,84,85,94,],[47,-34,-30,-50,-32,-31,-29,-49,-33,55,68,71,-35,-36,-40,-41,-37,-39,-38,-48,]),'else':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[10,10,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,10,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'GE':([22,23,24,25,26,29,30,31,32,48,74,77,78,83,84,85,94,],[-34,-30,-50,-32,-31,-29,-49,-33,52,-35,-36,-40,-41,-37,-39,-38,-48,]),'let':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[11,11,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,11,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'LPAREN':([2,7,9,13,21,28,30,38,43,46,51,52,53,54,55,56,57,58,59,60,61,68,71,72,73,90,96,],[28,38,28,43,28,28,43,28,28,72,28,28,28,28,28,28,28,28,28,28,28,28,96,28,99,28,28,]),'INTEGER':([2,9,21,28,38,43,51,52,53,54,55,56,57,58,59,60,61,68,72,90,96,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'RPAREN':([22,23,24,25,26,29,30,31,48,50,65,66,69,72,74,77,78,83,84,85,94,98,102,104,106,],[-34,-30,-50,-32,-31,-29,-49,-33,-35,74,89,-52,94,97,-36,-40,-41,-37,-39,-38,-48,105,-51,113,114,]),'with':([44,],[70,]),'ID':([0,1,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,21,22,23,24,25,26,28,29,30,31,34,35,37,38,40,41,43,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,67,68,70,72,74,77,78,83,84,85,86,87,90,91,92,93,94,96,97,100,101,105,107,108,109,110,111,112,113,114,],[13,20,30,33,13,36,39,-4,30,-18,42,-13,44,45,-16,-2,-5,46,30,-34,-30,-50,-32,-31,30,-29,-49,-33,-3,-1,-6,30,-15,-24,30,-35,-17,30,30,30,30,30,30,30,30,30,30,30,87,88,91,30,95,30,-36,-40,-41,-37,-39,-38,-7,-11,30,-8,-23,-22,-48,30,-19,107,108,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'UPDATE':([103,],[110,]),'search':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[14,14,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,14,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'FLOAT':([2,9,21,28,38,43,51,52,53,54,55,56,57,58,59,60,61,68,72,90,96,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'list':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[15,15,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,15,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'LT':([22,23,24,25,26,29,30,31,32,48,74,77,78,83,84,85,94,],[-34,-30,-50,-32,-31,-29,-49,-33,57,-35,-36,-40,-41,-37,-39,-38,-48,]),'continue':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[16,16,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,16,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),'error':([0,11,],[18,41,]),'COMMA':([22,23,24,25,26,29,30,31,36,48,65,66,69,74,77,78,83,84,85,94,98,102,104,],[-34,-30,-50,-32,-31,-29,-49,-33,64,-35,90,-52,90,-36,-40,-41,-37,-39,-38,-48,90,-51,90,]),'def':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,68,74,77,78,83,84,85,86,87,91,92,93,94,97,105,107,108,109,110,111,112,113,114,],[19,19,-4,-14,-18,-13,-16,-2,-5,-34,-30,-50,-32,-31,-29,-49,-33,-3,-1,-6,-15,-24,-35,-17,19,-36,-40,-41,-37,-39,-38,-7,-11,-8,-23,-22,-48,-19,-20,-12,-9,-27,-28,-10,-26,-25,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,2,4,9,21,28,38,43,51,52,53,54,55,56,57,58,59,60,61,68,72,90,96,],[8,26,34,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'dbvariable':([2,9,21,28,38,43,51,52,53,54,55,56,57,58,59,60,61,68,72,90,96,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'relexpression':([2,],[27,]),'parlist':([38,43,72,96,],[65,69,98,104,]),'program':([0,],[4,]),'command':([0,4,68,],[17,35,92,]),'sql':([103,],[111,]),'variable':([2,9,21,28,38,43,51,52,53,54,55,56,57,58,59,60,61,68,72,90,96,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'expression':([2,9,21,28,38,43,51,52,53,54,55,56,57,58,59,60,61,68,72,90,96,],[32,40,48,50,66,66,75,76,77,78,79,80,81,82,83,84,85,93,66,102,66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program command','program',2,'p_program','mqlparse.py',17),
  ('program -> command','program',1,'p_program','mqlparse.py',18),
  ('program -> program function','program',2,'p_program_function','mqlparse.py',31),
  ('program -> function','program',1,'p_program_function','mqlparse.py',32),
  ('program -> error','program',1,'p_program_error','mqlparse.py',46),
  ('command -> import STRING','command',2,'p_command_import','mqlparse.py',53),
  ('command -> outcsv ID in STRING','command',4,'p_command_outcsv','mqlparse.py',58),
  ('command -> save ID in ID','command',4,'p_command_save','mqlparse.py',63),
  ('command -> save LPAREN parlist RPAREN in ID','command',6,'p_command_save_list','mqlparse.py',68),
  ('command -> search ID with ID as sql','command',6,'p_command_search','mqlparse.py',73),
  ('command -> foreach ID in ID','command',4,'p_command_foreach','mqlparse.py',78),
  ('command -> foreach ID COMMA ID in ID','command',6,'p_command_foreach_enum','mqlparse.py',83),
  ('command -> end','command',1,'p_command_end','mqlparse.py',87),
  ('command -> return','command',1,'p_command_return','mqlparse.py',92),
  ('command -> return expression','command',2,'p_command_return_expr','mqlparse.py',97),
  ('command -> continue','command',1,'p_command_continue','mqlparse.py',102),
  ('command -> if relexpression then','command',3,'p_command_if','mqlparse.py',107),
  ('command -> else','command',1,'p_command_else','mqlparse.py',112),
  ('command -> def ID LPAREN RPAREN','command',4,'p_command_def_empty','mqlparse.py',117),
  ('command -> def ID LPAREN parlist RPAREN','command',5,'p_command_def','mqlparse.py',122),
  ('command -> connect ID EQUALS DBPROVIDER LPAREN STRING RPAREN','command',7,'p_command_connect','mqlparse.py',126),
  ('command -> let ID EQUALS expression','command',4,'p_command_let','mqlparse.py',131),
  ('command -> let ID EQUALS command','command',4,'p_command_let_command','mqlparse.py',136),
  ('command -> let error','command',2,'p_command_let_command_error','mqlparse.py',141),
  ('command -> list ID EQUALS LPAREN parlist RPAREN','command',6,'p_command_list','mqlparse.py',146),
  ('sql -> SELECT','sql',1,'p_sql','mqlparse.py',151),
  ('sql -> INSERT','sql',1,'p_sql','mqlparse.py',152),
  ('sql -> UPDATE','sql',1,'p_sql','mqlparse.py',153),
  ('expression -> variable','expression',1,'p_expression_variable','mqlparse.py',164),
  ('expression -> dbvariable','expression',1,'p_expression_dbvariable','mqlparse.py',169),
  ('expression -> function','expression',1,'p_expression_function','mqlparse.py',174),
  ('expression -> INTEGER','expression',1,'p_expression_number','mqlparse.py',179),
  ('expression -> FLOAT','expression',1,'p_expression_number','mqlparse.py',180),
  ('expression -> STRING','expression',1,'p_expression_string','mqlparse.py',185),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mqlparse.py',190),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mqlparse.py',195),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','mqlparse.py',200),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','mqlparse.py',201),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','mqlparse.py',202),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','mqlparse.py',203),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','mqlparse.py',204),
  ('relexpression -> expression LT expression','relexpression',3,'p_relexpression','mqlparse.py',215),
  ('relexpression -> expression LE expression','relexpression',3,'p_relexpression','mqlparse.py',216),
  ('relexpression -> expression GT expression','relexpression',3,'p_relexpression','mqlparse.py',217),
  ('relexpression -> expression GE expression','relexpression',3,'p_relexpression','mqlparse.py',218),
  ('relexpression -> expression EQUALS expression','relexpression',3,'p_relexpression','mqlparse.py',219),
  ('relexpression -> expression NE expression','relexpression',3,'p_relexpression','mqlparse.py',220),
  ('function -> ID LPAREN parlist RPAREN','function',4,'p_function','mqlparse.py',231),
  ('variable -> ID','variable',1,'p_variable','mqlparse.py',241),
  ('dbvariable -> DBID','dbvariable',1,'p_dbvariable','mqlparse.py',251),
  ('parlist -> parlist COMMA expression','parlist',3,'p_parlist','mqlparse.py',261),
  ('parlist -> expression','parlist',1,'p_parlist','mqlparse.py',262),
]
