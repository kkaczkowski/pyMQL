
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '15AB2CF5B0338C67E69054E72518A261'
    
_lr_action_items = {'DIVIDE':([22,23,24,25,26,28,30,31,32,33,41,49,51,70,74,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,101,102,107,108,112,116,117,118,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,55,55,-35,55,55,-51,55,-36,55,55,55,-40,-41,55,55,55,55,55,55,55,-39,55,55,-50,55,-55,55,-53,-54,55,-52,]),'IN':([22,23,24,25,26,28,30,31,32,33,49,74,79,84,85,91,93,94,102,108,116,117,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,63,-35,-51,-36,-40,-41,-37,-39,-38,-50,-55,-53,-54,-52,]),'as':([103,],[113,]),'connect':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[1,1,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'in':([34,37,40,97,98,],[66,67,71,110,111,]),'MULTIPLY':([22,23,24,25,26,28,30,31,32,33,41,49,51,70,74,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,101,102,107,108,112,116,117,118,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,64,64,-35,64,64,-51,64,-36,64,64,64,-40,-41,64,64,64,64,64,64,64,-39,64,64,-50,64,-55,64,-53,-54,64,-52,]),'MINUS':([2,9,21,22,23,24,25,26,28,29,30,31,32,33,39,41,44,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,70,72,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,101,102,104,107,108,109,112,116,117,118,126,],[21,21,21,-29,-57,-31,-33,-32,-34,21,-28,-56,-30,65,21,65,21,21,-35,65,21,21,21,21,21,21,21,21,21,21,21,21,21,21,65,21,-51,21,65,-36,21,65,65,65,-40,-41,65,65,65,65,65,-37,65,-39,-38,21,65,-50,21,65,-55,21,65,-53,-54,65,-52,]),'SELECT':([113,],[124,]),'if':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[2,2,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'INSERT':([113,],[121,]),'LE':([22,23,24,25,26,28,30,31,32,33,49,74,79,84,85,91,93,94,102,108,116,117,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,53,-35,-51,-36,-40,-41,-37,-39,-38,-50,-55,-53,-54,-52,]),'end':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[12,12,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'POWER':([22,23,24,25,26,28,30,31,32,33,41,49,51,70,74,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,101,102,107,108,112,116,117,118,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,56,56,-35,56,56,-51,56,-36,56,56,56,56,-41,56,56,56,56,56,56,56,56,56,56,-50,56,-55,56,-53,-54,56,-52,]),'DBID':([2,9,21,29,39,44,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,77,80,99,104,109,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'NE':([22,23,24,25,26,28,30,31,32,33,49,74,79,84,85,91,93,94,102,108,116,117,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,58,-35,-51,-36,-40,-41,-37,-39,-38,-50,-55,-53,-54,-52,]),'PLUS':([22,23,24,25,26,28,30,31,32,33,41,49,51,70,74,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,101,102,107,108,112,116,117,118,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,62,62,-35,62,62,-51,62,-36,62,62,62,-40,-41,62,62,62,62,62,-37,62,-39,-38,62,-50,62,-55,62,-53,-54,62,-52,]),'RE':([22,23,24,25,26,28,30,31,32,33,49,74,79,84,85,91,93,94,102,108,116,117,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,59,-35,-51,-36,-40,-41,-37,-39,-38,-50,-55,-53,-54,-52,]),'outcsv':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[3,3,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'COLON':([22,23,24,25,26,28,30,31,32,49,52,74,79,81,84,85,91,93,94,102,108,116,117,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,-35,80,-51,-36,109,-40,-41,-37,-39,-38,-50,-55,-53,-54,-52,]),'foreach':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[5,5,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'import':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[6,6,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'save':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[7,7,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'$end':([4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[0,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'then':([22,23,24,25,26,27,28,30,31,32,49,74,79,82,83,84,85,86,87,88,89,90,91,92,93,94,102,108,116,117,126,],[-29,-57,-31,-33,-32,50,-34,-28,-56,-30,-35,-51,-36,-43,-45,-40,-41,-46,-47,-49,-42,-44,-37,-48,-39,-38,-50,-55,-53,-54,-52,]),'GT':([22,23,24,25,26,28,30,31,32,33,49,74,79,84,85,91,93,94,102,108,116,117,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,61,-35,-51,-36,-40,-41,-37,-39,-38,-50,-55,-53,-54,-52,]),'return':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[9,9,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'STRING':([2,6,9,21,29,39,44,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,77,80,99,104,109,],[26,38,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,95,26,26,26,26,26,26,]),'with':([45,],[75,]),'EQUALS':([20,22,23,24,25,26,28,30,31,32,33,43,46,49,74,79,84,85,91,93,94,102,108,116,117,126,],[48,-29,-57,-31,-33,-32,-34,-28,-56,-30,57,72,76,-35,-51,-36,-40,-41,-37,-39,-38,-50,-55,-53,-54,-52,]),'else':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[10,10,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'GE':([22,23,24,25,26,28,30,31,32,33,49,74,79,84,85,91,93,94,102,108,116,117,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,54,-35,-51,-36,-40,-41,-37,-39,-38,-50,-55,-53,-54,-52,]),'let':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[11,11,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'LPAREN':([2,7,9,13,21,29,31,39,44,47,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,76,77,80,99,104,109,],[29,39,29,44,29,29,44,29,29,77,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,104,29,29,29,29,29,]),'INTEGER':([2,9,21,29,39,44,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,77,80,99,104,109,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'RPAREN':([22,23,24,25,26,28,30,31,32,44,49,51,69,70,73,74,77,79,84,85,91,93,94,102,105,108,112,114,116,117,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,74,-35,79,98,-59,102,-51,106,-36,-40,-41,-37,-39,-38,-50,115,-55,-58,125,-53,-54,-52,]),'LQPAREN':([31,],[52,]),'ID':([0,1,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,21,22,23,24,25,26,28,29,30,31,32,35,36,38,39,41,42,44,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,71,72,74,75,77,78,79,80,84,85,91,93,94,95,96,99,100,101,102,104,106,108,109,110,111,115,116,117,119,120,121,122,123,124,125,126,],[13,20,31,34,13,37,40,-4,31,-18,43,-13,45,46,-16,-2,-5,47,31,-29,-57,-31,-33,-32,-34,31,-28,-56,-30,-3,-1,-6,31,-15,-23,31,31,-35,-17,31,31,31,31,31,31,31,31,31,31,31,31,31,31,96,97,100,31,-51,103,31,-21,-36,31,-40,-41,-37,-39,-38,-7,-11,31,-8,-22,-50,31,-19,-55,31,119,120,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'UPDATE':([113,],[122,]),'search':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[14,14,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'FLOAT':([2,9,21,29,39,44,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,77,80,99,104,109,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'list':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[15,15,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'RQPAREN':([22,23,24,25,26,28,30,31,32,49,74,79,81,84,85,91,93,94,102,107,108,109,116,117,118,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,-35,-51,-36,108,-40,-41,-37,-39,-38,-50,116,-55,117,-53,-54,126,-52,]),'LT':([22,23,24,25,26,28,30,31,32,33,49,74,79,84,85,91,93,94,102,108,116,117,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,60,-35,-51,-36,-40,-41,-37,-39,-38,-50,-55,-53,-54,-52,]),'continue':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[16,16,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),'error':([0,11,],[18,42,]),'COMMA':([22,23,24,25,26,28,30,31,32,37,49,69,70,73,74,79,84,85,91,93,94,102,105,108,112,114,116,117,126,],[-29,-57,-31,-33,-32,-34,-28,-56,-30,68,-35,99,-59,99,-51,-36,-40,-41,-37,-39,-38,-50,99,-55,-58,99,-53,-54,-52,]),'def':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,28,30,31,32,35,36,38,41,42,49,50,74,78,79,84,85,91,93,94,95,96,100,101,102,106,108,115,116,117,119,120,121,122,123,124,125,126,],[19,19,-4,-14,-18,-13,-16,-2,-5,-29,-57,-31,-33,-32,-34,-28,-56,-30,-3,-1,-6,-15,-23,-35,-17,-51,-21,-36,-40,-41,-37,-39,-38,-7,-11,-8,-22,-50,-19,-55,-20,-53,-54,-12,-9,-26,-27,-10,-25,-24,-52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,2,4,9,21,29,39,44,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,77,80,99,104,109,],[8,25,35,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'dbvariable':([2,9,21,29,39,44,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,77,80,99,104,109,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'slice':([2,9,21,29,39,44,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,77,80,99,104,109,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'relexpression':([2,],[27,]),'parlist':([39,44,77,104,],[69,73,105,114,]),'program':([0,],[4,]),'command':([0,4,],[17,36,]),'sql':([113,],[123,]),'variable':([2,9,21,29,39,44,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,77,80,99,104,109,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'expression':([2,9,21,29,39,44,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,72,77,80,99,104,109,],[33,41,49,51,70,70,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,101,70,107,112,70,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program command','program',2,'p_program','mqlparse.py',18),
  ('program -> command','program',1,'p_program','mqlparse.py',19),
  ('program -> program function','program',2,'p_program_function','mqlparse.py',32),
  ('program -> function','program',1,'p_program_function','mqlparse.py',33),
  ('program -> error','program',1,'p_program_error','mqlparse.py',47),
  ('command -> import STRING','command',2,'p_command_import','mqlparse.py',54),
  ('command -> outcsv ID in STRING','command',4,'p_command_outcsv','mqlparse.py',59),
  ('command -> save ID in ID','command',4,'p_command_save','mqlparse.py',64),
  ('command -> save LPAREN parlist RPAREN in ID','command',6,'p_command_save_list','mqlparse.py',69),
  ('command -> search ID with ID as sql','command',6,'p_command_search','mqlparse.py',74),
  ('command -> foreach ID in ID','command',4,'p_command_foreach','mqlparse.py',79),
  ('command -> foreach ID COMMA ID in ID','command',6,'p_command_foreach_enum','mqlparse.py',84),
  ('command -> end','command',1,'p_command_end','mqlparse.py',88),
  ('command -> return','command',1,'p_command_return','mqlparse.py',93),
  ('command -> return expression','command',2,'p_command_return_expr','mqlparse.py',98),
  ('command -> continue','command',1,'p_command_continue','mqlparse.py',103),
  ('command -> if relexpression then','command',3,'p_command_if','mqlparse.py',108),
  ('command -> else','command',1,'p_command_else','mqlparse.py',113),
  ('command -> def ID LPAREN RPAREN','command',4,'p_command_def_empty','mqlparse.py',118),
  ('command -> def ID LPAREN parlist RPAREN','command',5,'p_command_def','mqlparse.py',123),
  ('command -> connect ID EQUALS expression','command',4,'p_command_connect','mqlparse.py',128),
  ('command -> let ID EQUALS expression','command',4,'p_command_let','mqlparse.py',133),
  ('command -> let error','command',2,'p_command_let_command_error','mqlparse.py',138),
  ('command -> list ID EQUALS LPAREN parlist RPAREN','command',6,'p_command_list','mqlparse.py',143),
  ('sql -> SELECT','sql',1,'p_sql','mqlparse.py',148),
  ('sql -> INSERT','sql',1,'p_sql','mqlparse.py',149),
  ('sql -> UPDATE','sql',1,'p_sql','mqlparse.py',150),
  ('expression -> variable','expression',1,'p_expression_variable','mqlparse.py',161),
  ('expression -> dbvariable','expression',1,'p_expression_dbvariable','mqlparse.py',166),
  ('expression -> FLOAT','expression',1,'p_expression_float','mqlparse.py',171),
  ('expression -> INTEGER','expression',1,'p_expression_integer','mqlparse.py',176),
  ('expression -> STRING','expression',1,'p_expression_string','mqlparse.py',181),
  ('expression -> function','expression',1,'p_expression_function','mqlparse.py',186),
  ('expression -> slice','expression',1,'p_expression_slice','mqlparse.py',191),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mqlparse.py',196),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mqlparse.py',201),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','mqlparse.py',206),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','mqlparse.py',207),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','mqlparse.py',208),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','mqlparse.py',209),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','mqlparse.py',210),
  ('relexpression -> expression LT expression','relexpression',3,'p_relexpression','mqlparse.py',216),
  ('relexpression -> expression LE expression','relexpression',3,'p_relexpression','mqlparse.py',217),
  ('relexpression -> expression GT expression','relexpression',3,'p_relexpression','mqlparse.py',218),
  ('relexpression -> expression GE expression','relexpression',3,'p_relexpression','mqlparse.py',219),
  ('relexpression -> expression EQUALS expression','relexpression',3,'p_relexpression','mqlparse.py',220),
  ('relexpression -> expression NE expression','relexpression',3,'p_relexpression','mqlparse.py',221),
  ('relexpression -> expression IN expression','relexpression',3,'p_relexpression','mqlparse.py',222),
  ('relexpression -> expression RE expression','relexpression',3,'p_relexpression','mqlparse.py',223),
  ('function -> ID LPAREN parlist RPAREN','function',4,'p_function','mqlparse.py',234),
  ('function -> ID LPAREN RPAREN','function',3,'p_function','mqlparse.py',235),
  ('slice -> ID LQPAREN expression COLON expression RQPAREN','slice',6,'p_slice','mqlparse.py',246),
  ('slice -> ID LQPAREN COLON expression RQPAREN','slice',5,'p_slice','mqlparse.py',247),
  ('slice -> ID LQPAREN expression COLON RQPAREN','slice',5,'p_slice','mqlparse.py',248),
  ('slice -> ID LQPAREN expression RQPAREN','slice',4,'p_slice','mqlparse.py',249),
  ('variable -> ID','variable',1,'p_variable','mqlparse.py',264),
  ('dbvariable -> DBID','dbvariable',1,'p_dbvariable','mqlparse.py',274),
  ('parlist -> parlist COMMA expression','parlist',3,'p_parlist','mqlparse.py',284),
  ('parlist -> expression','parlist',1,'p_parlist','mqlparse.py',285),
]
