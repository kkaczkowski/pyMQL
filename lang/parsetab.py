
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EC244A801B1C855901957750C7ED5AEE'
    
_lr_action_items = {'DIVIDE':([22,23,24,25,26,29,30,31,32,40,48,50,66,69,74,75,76,77,78,79,80,81,82,83,84,85,86,93,94,101,],[-32,-29,-50,-31,-33,-28,-49,-30,53,53,-34,53,53,-48,53,-35,53,53,-39,-40,53,53,53,53,53,-38,53,53,-47,53,]),'as':([95,],[102,]),'connect':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[1,1,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'in':([33,36,39,89,90,],[62,63,67,99,100,]),'MULTIPLY':([22,23,24,25,26,29,30,31,32,40,48,50,66,69,74,75,76,77,78,79,80,81,82,83,84,85,86,93,94,101,],[-32,-29,-50,-31,-33,-28,-49,-30,60,60,-34,60,60,-48,60,-35,60,60,-39,-40,60,60,60,60,60,-38,60,60,-47,60,]),'MINUS':([2,9,21,22,23,24,25,26,28,29,30,31,32,38,40,43,47,48,50,51,52,53,54,55,56,57,58,59,60,61,66,68,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,91,93,94,96,101,],[21,21,21,-32,-29,-50,-31,-33,21,-28,-49,-30,61,21,61,21,21,-34,61,21,21,21,21,21,21,21,21,21,21,21,61,21,-48,21,61,-35,61,61,-39,-40,61,61,61,61,-36,-38,-37,21,61,-47,21,61,]),'SELECT':([102,],[110,]),'if':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[2,2,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'INSERT':([102,],[107,]),'LE':([22,23,24,25,26,29,30,31,32,48,69,75,78,79,84,85,86,94,],[-32,-29,-50,-31,-33,-28,-49,-30,51,-34,-48,-35,-39,-40,-36,-38,-37,-47,]),'end':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[12,12,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'POWER':([22,23,24,25,26,29,30,31,32,40,48,50,66,69,74,75,76,77,78,79,80,81,82,83,84,85,86,93,94,101,],[-32,-29,-50,-31,-33,-28,-49,-30,54,54,-34,54,54,-48,54,-35,54,54,54,-40,54,54,54,54,54,54,54,54,-47,54,]),'DBID':([2,9,21,28,38,43,47,51,52,53,54,55,56,57,58,59,60,61,68,73,91,96,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'NE':([22,23,24,25,26,29,30,31,32,48,69,75,78,79,84,85,86,94,],[-32,-29,-50,-31,-33,-28,-49,-30,56,-34,-48,-35,-39,-40,-36,-38,-37,-47,]),'outcsv':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[3,3,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'PLUS':([22,23,24,25,26,29,30,31,32,40,48,50,66,69,74,75,76,77,78,79,80,81,82,83,84,85,86,93,94,101,],[-32,-29,-50,-31,-33,-28,-49,-30,59,59,-34,59,59,-48,59,-35,59,59,-39,-40,59,59,59,59,-36,-38,-37,59,-47,59,]),'foreach':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[5,5,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'import':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[6,6,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'save':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[7,7,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'$end':([4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[0,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'then':([22,23,24,25,26,27,29,30,31,48,69,75,76,77,78,79,80,81,82,83,84,85,86,94,],[-32,-29,-50,-31,-33,49,-28,-49,-30,-34,-48,-35,-42,-44,-39,-40,-45,-46,-41,-43,-36,-38,-37,-47,]),'GT':([22,23,24,25,26,29,30,31,32,48,69,75,78,79,84,85,86,94,],[-32,-29,-50,-31,-33,-28,-49,-30,58,-34,-48,-35,-39,-40,-36,-38,-37,-47,]),'return':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[9,9,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'STRING':([2,6,9,21,28,38,43,47,51,52,53,54,55,56,57,58,59,60,61,62,68,73,91,96,],[22,37,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,87,22,22,22,22,]),'EQUALS':([20,22,23,24,25,26,29,30,31,32,42,45,48,69,75,78,79,84,85,86,94,],[47,-32,-29,-50,-31,-33,-28,-49,-30,55,68,72,-34,-48,-35,-39,-40,-36,-38,-37,-47,]),'else':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[10,10,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'GE':([22,23,24,25,26,29,30,31,32,48,69,75,78,79,84,85,86,94,],[-32,-29,-50,-31,-33,-28,-49,-30,52,-34,-48,-35,-39,-40,-36,-38,-37,-47,]),'let':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[11,11,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'LPAREN':([2,7,9,13,21,28,30,38,43,46,47,51,52,53,54,55,56,57,58,59,60,61,68,72,73,91,96,],[28,38,28,43,28,28,43,28,28,73,28,28,28,28,28,28,28,28,28,28,28,28,28,96,28,28,28,]),'INTEGER':([2,9,21,28,38,43,47,51,52,53,54,55,56,57,58,59,60,61,68,73,91,96,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'RPAREN':([22,23,24,25,26,29,30,31,43,48,50,65,66,69,70,73,75,78,79,84,85,86,94,98,101,103,],[-32,-29,-50,-31,-33,-28,-49,-30,69,-34,75,90,-52,-48,94,97,-35,-39,-40,-36,-38,-37,-47,104,-51,111,]),'with':([44,],[71,]),'ID':([0,1,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,21,22,23,24,25,26,28,29,30,31,34,35,37,38,40,41,43,47,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,67,68,69,71,73,74,75,78,79,84,85,86,87,88,91,92,93,94,96,97,99,100,104,105,106,107,108,109,110,111,],[13,20,30,33,13,36,39,-4,30,-18,42,-13,44,45,-16,-2,-5,46,30,-32,-29,-50,-31,-33,30,-28,-49,-30,-3,-1,-6,30,-15,-23,30,30,-34,-17,30,30,30,30,30,30,30,30,30,30,30,88,89,92,30,-48,95,30,-21,-35,-39,-40,-36,-38,-37,-7,-11,30,-8,-22,-47,30,-19,105,106,-20,-12,-9,-26,-27,-10,-25,-24,]),'UPDATE':([102,],[108,]),'search':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[14,14,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'FLOAT':([2,9,21,28,38,43,47,51,52,53,54,55,56,57,58,59,60,61,68,73,91,96,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'list':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[15,15,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'LT':([22,23,24,25,26,29,30,31,32,48,69,75,78,79,84,85,86,94,],[-32,-29,-50,-31,-33,-28,-49,-30,57,-34,-48,-35,-39,-40,-36,-38,-37,-47,]),'continue':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[16,16,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),'error':([0,11,],[18,41,]),'COMMA':([22,23,24,25,26,29,30,31,36,48,65,66,69,70,75,78,79,84,85,86,94,98,101,103,],[-32,-29,-50,-31,-33,-28,-49,-30,64,-34,91,-52,-48,91,-35,-39,-40,-36,-38,-37,-47,91,-51,91,]),'def':([0,4,8,9,10,12,16,17,18,22,23,24,25,26,29,30,31,34,35,37,40,41,48,49,69,74,75,78,79,84,85,86,87,88,92,93,94,97,104,105,106,107,108,109,110,111,],[19,19,-4,-14,-18,-13,-16,-2,-5,-32,-29,-50,-31,-33,-28,-49,-30,-3,-1,-6,-15,-23,-34,-17,-48,-21,-35,-39,-40,-36,-38,-37,-7,-11,-8,-22,-47,-19,-20,-12,-9,-26,-27,-10,-25,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,2,4,9,21,28,38,43,47,51,52,53,54,55,56,57,58,59,60,61,68,73,91,96,],[8,26,34,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'dbvariable':([2,9,21,28,38,43,47,51,52,53,54,55,56,57,58,59,60,61,68,73,91,96,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'relexpression':([2,],[27,]),'parlist':([38,43,73,96,],[65,70,98,103,]),'program':([0,],[4,]),'command':([0,4,],[17,35,]),'sql':([102,],[109,]),'variable':([2,9,21,28,38,43,47,51,52,53,54,55,56,57,58,59,60,61,68,73,91,96,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'expression':([2,9,21,28,38,43,47,51,52,53,54,55,56,57,58,59,60,61,68,73,91,96,],[32,40,48,50,66,66,74,76,77,78,79,80,81,82,83,84,85,86,93,66,101,66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program command','program',2,'p_program','mqlparse.py',17),
  ('program -> command','program',1,'p_program','mqlparse.py',18),
  ('program -> program function','program',2,'p_program_function','mqlparse.py',31),
  ('program -> function','program',1,'p_program_function','mqlparse.py',32),
  ('program -> error','program',1,'p_program_error','mqlparse.py',46),
  ('command -> import STRING','command',2,'p_command_import','mqlparse.py',53),
  ('command -> outcsv ID in STRING','command',4,'p_command_outcsv','mqlparse.py',58),
  ('command -> save ID in ID','command',4,'p_command_save','mqlparse.py',63),
  ('command -> save LPAREN parlist RPAREN in ID','command',6,'p_command_save_list','mqlparse.py',68),
  ('command -> search ID with ID as sql','command',6,'p_command_search','mqlparse.py',73),
  ('command -> foreach ID in ID','command',4,'p_command_foreach','mqlparse.py',78),
  ('command -> foreach ID COMMA ID in ID','command',6,'p_command_foreach_enum','mqlparse.py',83),
  ('command -> end','command',1,'p_command_end','mqlparse.py',87),
  ('command -> return','command',1,'p_command_return','mqlparse.py',92),
  ('command -> return expression','command',2,'p_command_return_expr','mqlparse.py',97),
  ('command -> continue','command',1,'p_command_continue','mqlparse.py',102),
  ('command -> if relexpression then','command',3,'p_command_if','mqlparse.py',107),
  ('command -> else','command',1,'p_command_else','mqlparse.py',112),
  ('command -> def ID LPAREN RPAREN','command',4,'p_command_def_empty','mqlparse.py',117),
  ('command -> def ID LPAREN parlist RPAREN','command',5,'p_command_def','mqlparse.py',122),
  ('command -> connect ID EQUALS expression','command',4,'p_command_connect','mqlparse.py',127),
  ('command -> let ID EQUALS expression','command',4,'p_command_let','mqlparse.py',132),
  ('command -> let error','command',2,'p_command_let_command_error','mqlparse.py',142),
  ('command -> list ID EQUALS LPAREN parlist RPAREN','command',6,'p_command_list','mqlparse.py',147),
  ('sql -> SELECT','sql',1,'p_sql','mqlparse.py',152),
  ('sql -> INSERT','sql',1,'p_sql','mqlparse.py',153),
  ('sql -> UPDATE','sql',1,'p_sql','mqlparse.py',154),
  ('expression -> variable','expression',1,'p_expression_variable','mqlparse.py',165),
  ('expression -> dbvariable','expression',1,'p_expression_dbvariable','mqlparse.py',170),
  ('expression -> FLOAT','expression',1,'p_expression_float','mqlparse.py',175),
  ('expression -> INTEGER','expression',1,'p_expression_integer','mqlparse.py',180),
  ('expression -> STRING','expression',1,'p_expression_string','mqlparse.py',185),
  ('expression -> function','expression',1,'p_expression_function','mqlparse.py',190),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mqlparse.py',195),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mqlparse.py',200),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','mqlparse.py',205),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','mqlparse.py',206),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','mqlparse.py',207),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','mqlparse.py',208),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','mqlparse.py',209),
  ('relexpression -> expression LT expression','relexpression',3,'p_relexpression','mqlparse.py',220),
  ('relexpression -> expression LE expression','relexpression',3,'p_relexpression','mqlparse.py',221),
  ('relexpression -> expression GT expression','relexpression',3,'p_relexpression','mqlparse.py',222),
  ('relexpression -> expression GE expression','relexpression',3,'p_relexpression','mqlparse.py',223),
  ('relexpression -> expression EQUALS expression','relexpression',3,'p_relexpression','mqlparse.py',224),
  ('relexpression -> expression NE expression','relexpression',3,'p_relexpression','mqlparse.py',225),
  ('function -> ID LPAREN parlist RPAREN','function',4,'p_function','mqlparse.py',236),
  ('function -> ID LPAREN RPAREN','function',3,'p_function','mqlparse.py',237),
  ('variable -> ID','variable',1,'p_variable','mqlparse.py',250),
  ('dbvariable -> DBID','dbvariable',1,'p_dbvariable','mqlparse.py',260),
  ('parlist -> parlist COMMA expression','parlist',3,'p_parlist','mqlparse.py',270),
  ('parlist -> expression','parlist',1,'p_parlist','mqlparse.py',271),
]
