
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '81AEF47BBF0AEE6B143F46B4EE0EA751'
    
_lr_action_items = {'DIVIDE':([4,9,12,15,16,18,23,25,27,34,36,39,59,60,63,64,65,66,67,69,70,71,72,73,74,78,79,87,92,],[-44,-26,-28,-25,-42,-27,43,-29,43,43,43,43,-30,43,-34,-35,43,-33,43,43,43,43,43,43,43,43,-43,43,43,]),'as':([41,],[61,]),'in':([28,30,],[56,57,]),'MULTIPLY':([4,9,12,15,16,18,23,25,27,34,36,39,59,60,63,64,65,66,67,69,70,71,72,73,74,78,79,87,92,],[-44,-26,-28,-25,-42,-27,46,-29,46,46,46,46,-30,46,-34,-35,46,-33,46,46,46,46,46,46,46,46,-43,46,46,]),'MINUS':([0,1,2,4,8,9,11,12,14,15,16,18,23,25,27,34,36,39,40,43,44,45,46,47,50,51,52,53,54,55,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,78,79,84,87,90,92,],[1,1,1,-44,1,-26,1,-28,1,-25,-42,-27,47,-29,47,47,47,47,1,1,1,1,1,1,1,1,1,1,1,1,1,-30,47,-34,-35,-31,-33,-32,1,47,47,47,47,47,47,47,-43,1,47,1,47,]),'SELECT':([61,],[83,]),'if':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[2,-11,-44,2,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,2,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'INSERT':([61,],[80,]),'LE':([4,9,12,15,16,18,25,27,59,63,64,65,66,67,79,],[-44,-26,-28,-25,-42,-27,-29,50,-30,-34,-35,-31,-33,-32,-43,]),'end':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[3,-11,-44,3,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,3,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'POWER':([4,9,12,15,16,18,23,25,27,34,36,39,59,60,63,64,65,66,67,69,70,71,72,73,74,78,79,87,92,],[-44,-26,-28,-25,-42,-27,44,-29,44,44,44,44,-30,44,44,-35,44,44,44,44,44,44,44,44,44,44,-43,44,44,]),'DBID':([0,1,2,8,11,14,40,43,44,45,46,47,50,51,52,53,54,55,58,68,84,90,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NE':([4,9,12,15,16,18,25,27,59,63,64,65,66,67,79,],[-44,-26,-28,-25,-42,-27,-29,53,-30,-34,-35,-31,-33,-32,-43,]),'outcsv':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[5,-11,-44,5,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,5,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'PLUS':([4,9,12,15,16,18,23,25,27,34,36,39,59,60,63,64,65,66,67,69,70,71,72,73,74,78,79,87,92,],[-44,-26,-28,-25,-42,-27,45,-29,45,45,45,45,-30,45,-34,-35,-31,-33,-32,45,45,45,45,45,45,45,-43,45,45,]),'foreach':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[7,-11,-44,7,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,7,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'print':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[8,-11,-44,8,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,8,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'INTEGER':([0,1,2,8,11,14,40,43,44,45,46,47,50,51,52,53,54,55,58,68,84,90,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'include':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[10,-11,-44,10,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,10,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'$end':([3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[-11,-44,0,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'then':([4,9,12,15,16,18,25,26,59,63,64,65,66,67,69,70,71,72,73,74,79,],[-44,-26,-28,-25,-42,-27,-29,49,-30,-34,-35,-31,-33,-32,-37,-39,-40,-41,-36,-38,-43,]),'GT':([4,9,12,15,16,18,25,27,59,63,64,65,66,67,79,],[-44,-26,-28,-25,-42,-27,-29,55,-30,-34,-35,-31,-33,-32,-43,]),'return':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[11,-11,-44,11,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,11,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'STRING':([0,1,2,8,10,11,14,40,43,44,45,46,47,50,51,52,53,54,55,56,58,68,84,90,],[12,12,12,12,35,12,12,12,12,12,12,12,12,12,12,12,12,12,12,75,12,12,12,12,]),'EQUALS':([4,9,12,15,16,18,25,27,38,42,59,63,64,65,66,67,79,],[-44,-26,-28,-25,-42,-27,-29,52,58,62,-30,-34,-35,-31,-33,-32,-43,]),'UPDATE':([61,],[81,]),'GE':([4,9,12,15,16,18,25,27,59,63,64,65,66,67,79,],[-44,-26,-28,-25,-42,-27,-29,51,-30,-34,-35,-31,-33,-32,-43,]),'let':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[13,-11,-44,13,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,13,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'LPAREN':([0,1,2,8,11,14,16,40,43,44,45,46,47,48,50,51,52,53,54,55,58,62,68,84,90,],[14,14,14,14,14,14,40,14,14,14,14,14,14,68,14,14,14,14,14,14,14,84,14,14,14,]),'RPAREN':([4,9,12,15,16,18,25,39,59,60,63,64,65,66,67,68,79,86,87,88,92,],[-44,-26,-28,-25,-42,-27,-29,59,-30,79,-34,-35,-31,-33,-32,85,-43,89,-46,91,-45,]),'ID':([0,1,2,5,7,8,11,13,14,17,19,24,40,43,44,45,46,47,50,51,52,53,54,55,57,58,68,84,90,],[16,16,16,28,30,16,16,38,16,41,42,48,16,16,16,16,16,16,16,16,16,16,16,16,76,16,16,16,16,]),'search':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[17,-11,-44,17,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,17,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'SEMI':([8,],[31,]),'FLOAT':([0,1,2,8,11,14,40,43,44,45,46,47,50,51,52,53,54,55,58,68,84,90,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'list':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[19,-11,-44,19,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,19,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'LT':([4,9,12,15,16,18,25,27,59,63,64,65,66,67,79,],[-44,-26,-28,-25,-42,-27,-29,54,-30,-34,-35,-31,-33,-32,-43,]),'continue':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[20,-11,-44,20,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,20,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),'error':([0,13,],[22,37,]),'COMMA':([4,8,9,12,15,16,18,25,59,63,64,65,66,67,79,86,87,88,92,],[-44,33,-26,-28,-25,-42,-27,-29,-30,-34,-35,-31,-33,-32,-43,90,-46,90,-45,]),'def':([0,3,4,6,8,9,11,12,15,16,18,20,21,22,23,25,29,31,32,33,34,35,36,37,49,58,59,63,64,65,66,67,75,76,77,78,79,80,81,82,83,85,89,91,],[24,-11,-44,24,-49,-26,-12,-28,-25,-42,-27,-14,-2,-4,-3,-29,-1,-48,-7,-47,-8,-5,-13,-20,-15,24,-30,-34,-35,-31,-33,-32,-6,-10,-19,-18,-43,-23,-24,-9,-22,-16,-17,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relexpression':([2,],[26,]),'optend':([8,],[32,]),'parlist':([68,84,],[86,88,]),'program':([0,],[6,]),'command':([0,6,58,],[21,29,77,]),'sql':([61,],[82,]),'variable':([0,1,2,8,11,14,40,43,44,45,46,47,50,51,52,53,54,55,58,68,84,90,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'expression':([0,1,2,8,11,14,40,43,44,45,46,47,50,51,52,53,54,55,58,68,84,90,],[23,25,27,34,36,39,60,63,64,65,66,67,69,70,71,72,73,74,78,87,87,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program command','program',2,'p_program','mqlparse.py',17),
  ('program -> command','program',1,'p_program','mqlparse.py',18),
  ('program -> expression','program',1,'p_program','mqlparse.py',19),
  ('program -> error','program',1,'p_program_error','mqlparse.py',31),
  ('command -> include STRING','command',2,'p_command_include','mqlparse.py',38),
  ('command -> outcsv ID in STRING','command',4,'p_command_outcsv','mqlparse.py',43),
  ('command -> print optend','command',2,'p_command_print_empty','mqlparse.py',48),
  ('command -> print expression','command',2,'p_command_print_expression','mqlparse.py',53),
  ('command -> search ID as sql','command',4,'p_command_search','mqlparse.py',58),
  ('command -> foreach ID in ID','command',4,'p_command_foreach','mqlparse.py',63),
  ('command -> end','command',1,'p_command_end','mqlparse.py',68),
  ('command -> return','command',1,'p_command_return','mqlparse.py',73),
  ('command -> return expression','command',2,'p_command_return_expr','mqlparse.py',78),
  ('command -> continue','command',1,'p_command_continue','mqlparse.py',83),
  ('command -> if relexpression then','command',3,'p_command_if','mqlparse.py',88),
  ('command -> def ID LPAREN RPAREN','command',4,'p_command_def_empty','mqlparse.py',93),
  ('command -> def ID LPAREN parlist RPAREN','command',5,'p_command_def','mqlparse.py',98),
  ('command -> let ID EQUALS expression','command',4,'p_command_let','mqlparse.py',103),
  ('command -> let ID EQUALS command','command',4,'p_command_let_command','mqlparse.py',108),
  ('command -> let error','command',2,'p_command_let_command_error','mqlparse.py',113),
  ('command -> list ID EQUALS LPAREN parlist RPAREN','command',6,'p_command_list','mqlparse.py',118),
  ('sql -> SELECT','sql',1,'p_sql','mqlparse.py',123),
  ('sql -> INSERT','sql',1,'p_sql','mqlparse.py',124),
  ('sql -> UPDATE','sql',1,'p_sql','mqlparse.py',125),
  ('expression -> variable','expression',1,'p_expression_variable','mqlparse.py',136),
  ('expression -> INTEGER','expression',1,'p_expression_number','mqlparse.py',141),
  ('expression -> FLOAT','expression',1,'p_expression_number','mqlparse.py',142),
  ('expression -> STRING','expression',1,'p_expression_string','mqlparse.py',147),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mqlparse.py',152),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mqlparse.py',157),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','mqlparse.py',162),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','mqlparse.py',163),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','mqlparse.py',164),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','mqlparse.py',165),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','mqlparse.py',166),
  ('relexpression -> expression LT expression','relexpression',3,'p_relexpression','mqlparse.py',177),
  ('relexpression -> expression LE expression','relexpression',3,'p_relexpression','mqlparse.py',178),
  ('relexpression -> expression GT expression','relexpression',3,'p_relexpression','mqlparse.py',179),
  ('relexpression -> expression GE expression','relexpression',3,'p_relexpression','mqlparse.py',180),
  ('relexpression -> expression EQUALS expression','relexpression',3,'p_relexpression','mqlparse.py',181),
  ('relexpression -> expression NE expression','relexpression',3,'p_relexpression','mqlparse.py',182),
  ('variable -> ID','variable',1,'p_variable','mqlparse.py',193),
  ('variable -> ID LPAREN expression RPAREN','variable',4,'p_variable','mqlparse.py',194),
  ('variable -> DBID','variable',1,'p_variable','mqlparse.py',195),
  ('parlist -> parlist COMMA expression','parlist',3,'p_parlist','mqlparse.py',206),
  ('parlist -> expression','parlist',1,'p_parlist','mqlparse.py',207),
  ('optend -> COMMA','optend',1,'p_optend','mqlparse.py',216),
  ('optend -> SEMI','optend',1,'p_optend','mqlparse.py',217),
  ('optend -> <empty>','optend',0,'p_optend','mqlparse.py',218),
]
