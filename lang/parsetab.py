
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '325DEA6F6EFDE409FC762E80C2E1EE56'
    
_lr_action_items = {'DIVIDE':([15,16,17,20,21,22,23,26,32,34,53,54,55,56,57,58,59,60,61,62,63,64,65,69,77,78,83,],[-22,-38,-20,-19,-36,-21,38,38,-23,38,-24,38,38,38,-28,-29,38,38,38,38,38,-27,38,38,38,-37,38,]),'NE':([15,16,17,20,21,22,23,32,53,57,58,63,64,65,78,],[-22,-38,-20,-19,-36,-21,41,-23,-24,-28,-29,-25,-27,-26,-37,]),'as':([29,],[50,]),'in':([24,25,],[47,48,]),'MULTIPLY':([15,16,17,20,21,22,23,26,32,34,53,54,55,56,57,58,59,60,61,62,63,64,65,69,77,78,83,],[-22,-38,-20,-19,-36,-21,45,45,-23,45,-24,45,45,45,-28,-29,45,45,45,45,45,-27,45,45,45,-37,45,]),'MINUS':([1,5,14,15,16,17,19,20,21,22,23,26,32,34,35,36,37,38,39,40,41,42,43,44,45,46,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,69,74,77,78,81,83,],[14,14,14,-22,-38,-20,14,-19,-36,-21,46,46,-23,46,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-24,46,46,46,-28,-29,46,46,46,46,-25,-27,-26,46,14,46,-37,14,46,]),'SELECT':([50,],[73,]),'if':([0,49,],[1,1,]),'INSERT':([50,],[70,]),'LE':([15,16,17,20,21,22,23,32,53,57,58,63,64,65,78,],[-22,-38,-20,-19,-36,-21,36,-23,-24,-28,-29,-25,-27,-26,-37,]),'end':([0,49,],[2,2,]),'POWER':([15,16,17,20,21,22,23,26,32,34,53,54,55,56,57,58,59,60,61,62,63,64,65,69,77,78,83,],[-22,-38,-20,-19,-36,-21,39,39,-23,39,-24,39,39,39,39,-29,39,39,39,39,39,39,39,39,39,-37,39,]),'DBID':([1,5,14,19,35,36,37,38,39,40,41,42,43,44,45,46,49,52,74,81,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'LT':([15,16,17,20,21,22,23,32,53,57,58,63,64,65,78,],[-22,-38,-20,-19,-36,-21,42,-23,-24,-28,-29,-25,-27,-26,-37,]),'outcsv':([0,49,],[3,3,]),'PLUS':([15,16,17,20,21,22,23,26,32,34,53,54,55,56,57,58,59,60,61,62,63,64,65,69,77,78,83,],[-22,-38,-20,-19,-36,-21,44,44,-23,44,-24,44,44,44,-28,-29,44,44,44,44,-25,-27,-26,44,44,-37,44,]),'foreach':([0,49,],[4,4,]),'print':([0,49,],[5,5,]),'INTEGER':([1,5,14,19,35,36,37,38,39,40,41,42,43,44,45,46,49,52,74,81,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'include':([0,49,],[6,6,]),'$end':([2,5,7,11,12,15,16,17,20,21,22,26,27,32,33,53,57,58,63,64,65,66,67,68,69,70,71,72,73,75,78,80,82,],[-10,-3,-11,-12,0,-22,-38,-20,-19,-36,-21,-4,-1,-23,-13,-24,-28,-29,-25,-27,-26,-2,-9,-17,-16,-7,-8,-5,-6,-14,-37,-15,-18,]),'then':([15,16,17,18,20,21,22,32,53,55,56,57,58,59,60,61,62,63,64,65,78,],[-22,-38,-20,33,-19,-36,-21,-23,-24,-31,-33,-28,-29,-34,-35,-30,-32,-25,-27,-26,-37,]),'GT':([15,16,17,20,21,22,23,32,53,57,58,63,64,65,78,],[-22,-38,-20,-19,-36,-21,43,-23,-24,-28,-29,-25,-27,-26,-37,]),'return':([0,49,],[7,7,]),'STRING':([1,5,6,14,19,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,74,81,],[15,15,27,15,15,15,15,15,15,15,15,15,15,15,15,15,15,66,15,15,15,15,]),'EQUALS':([15,16,17,20,21,22,23,28,30,32,53,57,58,63,64,65,78,],[-22,-38,-20,-19,-36,-21,40,49,51,-23,-24,-28,-29,-25,-27,-26,-37,]),'UPDATE':([50,],[71,]),'GE':([15,16,17,20,21,22,23,32,53,57,58,63,64,65,78,],[-22,-38,-20,-19,-36,-21,37,-23,-24,-28,-29,-25,-27,-26,-37,]),'let':([0,49,],[8,8,]),'LPAREN':([1,5,14,19,21,31,35,36,37,38,39,40,41,42,43,44,45,46,49,51,52,74,81,],[19,19,19,19,35,52,19,19,19,19,19,19,19,19,19,19,19,19,19,74,19,19,19,]),'RPAREN':([15,16,17,20,21,22,32,34,52,53,54,57,58,63,64,65,76,77,78,79,83,],[-22,-38,-20,-19,-36,-21,-23,53,75,-24,78,-28,-29,-25,-27,-26,80,-40,-37,82,-39,]),'ID':([1,3,4,5,8,9,10,13,14,19,35,36,37,38,39,40,41,42,43,44,45,46,48,49,52,74,81,],[21,24,25,21,28,29,30,31,21,21,21,21,21,21,21,21,21,21,21,21,21,21,67,21,21,21,21,]),'search':([0,49,],[9,9,]),'FLOAT':([1,5,14,19,35,36,37,38,39,40,41,42,43,44,45,46,49,52,74,81,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'list':([0,49,],[10,10,]),'continue':([0,49,],[11,11,]),'COMMA':([15,16,17,20,21,22,32,53,57,58,63,64,65,76,77,78,79,83,],[-22,-38,-20,-19,-36,-21,-23,-24,-28,-29,-25,-27,-26,81,-40,-37,81,-39,]),'def':([0,49,],[13,13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'relexpression':([1,],[18,]),'parlist':([52,74,],[76,79,]),'command':([0,49,],[12,68,]),'sql':([50,],[72,]),'variable':([1,5,14,19,35,36,37,38,39,40,41,42,43,44,45,46,49,52,74,81,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'expression':([1,5,14,19,35,36,37,38,39,40,41,42,43,44,45,46,49,52,74,81,],[23,26,32,34,54,55,56,57,58,59,60,61,62,63,64,65,69,77,77,83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> command","S'",1,None,None,None),
  ('command -> include STRING','command',2,'p_command_include','mqlparse.py',17),
  ('command -> outcsv ID in STRING','command',4,'p_command_outcsv','mqlparse.py',22),
  ('command -> print','command',1,'p_command_print_empty','mqlparse.py',27),
  ('command -> print expression','command',2,'p_command_print_expression','mqlparse.py',32),
  ('command -> search ID as sql','command',4,'p_command_search','mqlparse.py',37),
  ('sql -> SELECT','sql',1,'p_sql','mqlparse.py',42),
  ('sql -> INSERT','sql',1,'p_sql','mqlparse.py',43),
  ('sql -> UPDATE','sql',1,'p_sql','mqlparse.py',44),
  ('command -> foreach ID in ID','command',4,'p_command_foreach','mqlparse.py',52),
  ('command -> end','command',1,'p_command_end','mqlparse.py',57),
  ('command -> return','command',1,'p_command_return','mqlparse.py',62),
  ('command -> continue','command',1,'p_command_continue','mqlparse.py',67),
  ('command -> if relexpression then','command',3,'p_command_if','mqlparse.py',72),
  ('command -> def ID LPAREN RPAREN','command',4,'p_command_def_empty','mqlparse.py',77),
  ('command -> def ID LPAREN parlist RPAREN','command',5,'p_command_def','mqlparse.py',82),
  ('command -> let ID EQUALS expression','command',4,'p_command_let','mqlparse.py',87),
  ('command -> let ID EQUALS command','command',4,'p_command_let_command','mqlparse.py',92),
  ('command -> list ID EQUALS LPAREN parlist RPAREN','command',6,'p_command_list','mqlparse.py',97),
  ('expression -> variable','expression',1,'p_expression_variable','mqlparse.py',108),
  ('expression -> INTEGER','expression',1,'p_expression_number','mqlparse.py',113),
  ('expression -> FLOAT','expression',1,'p_expression_number','mqlparse.py',114),
  ('expression -> STRING','expression',1,'p_expression_string','mqlparse.py',119),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','mqlparse.py',124),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mqlparse.py',129),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','mqlparse.py',134),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','mqlparse.py',135),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','mqlparse.py',136),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','mqlparse.py',137),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','mqlparse.py',138),
  ('relexpression -> expression LT expression','relexpression',3,'p_relexpression','mqlparse.py',149),
  ('relexpression -> expression LE expression','relexpression',3,'p_relexpression','mqlparse.py',150),
  ('relexpression -> expression GT expression','relexpression',3,'p_relexpression','mqlparse.py',151),
  ('relexpression -> expression GE expression','relexpression',3,'p_relexpression','mqlparse.py',152),
  ('relexpression -> expression EQUALS expression','relexpression',3,'p_relexpression','mqlparse.py',153),
  ('relexpression -> expression NE expression','relexpression',3,'p_relexpression','mqlparse.py',154),
  ('variable -> ID','variable',1,'p_variable','mqlparse.py',165),
  ('variable -> ID LPAREN expression RPAREN','variable',4,'p_variable','mqlparse.py',166),
  ('variable -> DBID','variable',1,'p_variable','mqlparse.py',167),
  ('parlist -> parlist COMMA expression','parlist',3,'p_parlist','mqlparse.py',178),
  ('parlist -> expression','parlist',1,'p_parlist','mqlparse.py',179),
]
